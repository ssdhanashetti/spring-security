# This is a basic workflow to help you get started with Actions

name: CI to Docker Hub

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cache
        uses: actions/cache@v2.1.4
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: /tmp/.buildx-cache
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: ${{ runner.os }}-buildx-

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout our repo
        uses: actions/checkout@v2
         

      # Runs a single command using the runners shell
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          

      # Runs a set of commands using the runners shell
      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: shankarrajdhanashetti/spring-security-gh:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
